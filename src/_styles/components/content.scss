// -----------------------------------------------------------------------------
// Content Sections - Grid, Header, Footer
// -----------------------------------------------------------------------------

$content-grid-item-vertical-spacing:       $grid-gutter-width;
$content-grid-item-vertical-spacing-tight: $grid-gutter-width / 2;
$content-grid-item-vertical-spacing-loose: $grid-gutter-width * 2;


.content-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  flex-direction: row;
  margin-left: -$grid-gutter-width/2;
  margin-right: -$grid-gutter-width/2;
  margin-bottom: -#{$content-grid-item-vertical-spacing}; // Cancel the bottom margin

  &--centered {
    justify-content: center;
  }

  &--flush {
    margin-left: 0;
    margin-right: 0;
    margin-bottom: 0;
  }

  // For these modifiers, 'tight' and 'loose' refer to vertical spacing, not the horizontal spacing between grid items
  &--tight {
    margin-bottom: -#{$content-grid-item-vertical-spacing-tight};
  }

  &--loose {
    margin-bottom: -#{$content-grid-item-vertical-spacing-loose};
  }
}

.content-grid__item {
  flex: 1;
  flex-basis: percentage(1);
  max-width: percentage(1);
  margin-bottom: $content-grid-item-vertical-spacing;
  padding: 0 $grid-gutter-width/2;

  // Default behavior is 1 -> 2 -> 3 across
  @include media-breakpoint-up('sm') {
    flex-basis: percentage(1/2);
    max-width: percentage(1/2);
  }

  @include media-breakpoint-up('lg') {
    flex-basis: percentage(1/3);
    max-width: percentage(1/3);
  }

  // Generate a base class for each ratio at each breakpoint (including reverse ratios)
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix-rear($breakpoint, $grid-breakpoints);

      @for $i from 1 through 6 {
        .content-grid--#{$infix}#{$i}-col & {
          flex-basis: percentage(1/$i);
          max-width: percentage(1/$i);
        }
      }
    }
  }

  // Allow some grid items to always be full width no matter what
  &.content-grid__item--full {
    flex-basis: percentage(1);
    max-width: percentage(1);
  }

  .content-grid--flush & {
    padding-left: 0;
    padding-right: 0;
    margin-bottom: 0;
  }

  .content-grid--tight & {
    margin-bottom: $content-grid-item-vertical-spacing-tight;
  }

  .content-grid--loose & {
    margin-bottom: $content-grid-item-vertical-spacing-loose;
  }
}

.content-header,
.content-footer {
  text-align: center;
  margin-top: $grid-gutter-width;
  margin-bottom: $grid-gutter-width;
}

.content-header {

}

.content-header__title {
  margin-bottom: 0;
}

.content-header__subtitle {
  font-size: $font-size-lg;
  max-width: 40em;
  margin-left: auto;
  margin-right: auto;

  .content-header__title + & {
    margin-top: $spacer;
  }
}

.content-footer {

}
