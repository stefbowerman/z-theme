// -----------------------------------------------------------------------------
// Content Sections - Grid, Header, Footer
// -----------------------------------------------------------------------------

$content-grid-item-vertical-spacing:       $grid-gutter-width;
$content-grid-item-vertical-spacing-tight: $grid-gutter-width / 2;
$content-grid-item-vertical-spacing-loose: $grid-gutter-width * 2;


.content-grid {
  @include display-flex;
  @include flex-wrap(wrap);
  @include justify-content(flex-start);
  @include flex-direction(row);
  margin-left: -$grid-gutter-width/2;
  margin-right: -$grid-gutter-width/2;
  margin-bottom: -#{$content-grid-item-vertical-spacing}; // Cancel the bottom margin

  &--centered {
    @include justify-content(center);
  }

  &--flush {
    margin-left: 0;
    margin-right: 0;
    margin-bottom: 0;
  }

  // For these modifiers, 'tight' and 'loose' refer to vertical spacing, not the horizontal spacing between grid items
  &.content-grid--tight {
    margin-bottom: -#{$content-grid-item-vertical-spacing-tight};
  }

  &.content-grid--loose {
    margin-bottom: -#{$content-grid-item-vertical-spacing-loose};
  }
}

.content-grid__item {
  @include flex(1);
  @include flex-basis(percentage(1/1));
  margin-bottom: $content-grid-item-vertical-spacing;
  padding: 0 $grid-gutter-width/2;
  max-width: percentage(1/1);

  .content-grid--2-4 & {
    @include flex-basis(percentage(1/2));
    max-width: percentage(1/2);
  }

  @media (min-width: $screen-xs-min) {
    .content-grid--1-2-4 &,
    .content-grid--1-2-3 & {
      @include flex-basis(percentage(1/2));
      max-width: percentage(1/2);
    }
  }

  // Default is to do 3 across on medium-up screens
  // Add support for 2 and 4 across using a modifier class on the parent .content-grid
  @media (min-width: $screen-md-min) {

    &,
    .content-grid--1-2-3 & {
      @include flex-basis(percentage(1/3));
      max-width: percentage(1/3);
    }

    .content-grid--2-col & {
      @include flex-basis(percentage(1/2));
      max-width: percentage(1/2);
    }

    .content-grid--4-col &,
    .content-grid--2-4 & {
      @include flex-basis(percentage(1/4));
      max-width: percentage(1/4);
    }
  }

  @media (min-width: $screen-lg-min) {
    .content-grid--1-2-4 & {
      @include flex-basis(percentage(1/4));
      max-width: percentage(1/4);
    }
  }

  // Allow some grid items to always be full width no matter what
  &.content-grid__item--full {
    @include flex-basis(percentage(1));
    max-width: percentage(1);
  }

  .content-grid--flush & {
    padding-left: 0;
    padding-right: 0;
    margin-bottom: 0;
  }

  .content-grid--tight & {
    margin-bottom: $content-grid-item-vertical-spacing-tight;
  }

  .content-grid--loose & {
    margin-bottom: $content-grid-item-vertical-spacing-loose;
  }
}

.content-header,
.content-footer {
  text-align: center;
  margin-top: $grid-gutter-width;
  margin-bottom: $grid-gutter-width;
}

.content-header {

}

.content-header__title {
  margin-bottom: 0;
}

.content-header__subtitle {
  font-size: $font-size-large;
  max-width: 40em;
  margin-left: auto;
  margin-right: auto;

  .content-header__title + & {
    margin-top: $spacer;
  }
}

.content-footer {

}
