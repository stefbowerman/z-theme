// -------------------------
// Header
// -------------------------

.header {
  position: relative;
  z-index: $z-index-header;
  top: 0;
  left: 0;
  right: 0;
  height: $header-height-small;
  background-color: $header-bg;
  color: $header-text-color;
  @include backface-visibility(hidden);

  @media (min-width: $header-bp-min) {
    height: $header-height-base;
  }

  // If the fixed header behavior is turned on...
  .site-fixed-header & {
    position: absolute;
  }

  &.is-fixed {
    position: fixed;
  }  
}

// Make a special version of .container that is fluid w/ max width and vertical flex-alignment of child elements
.header-container {
  @extend .container-fluid;
  @include display-flex;
  @include flex-grow(1);
  @include justify-content(space-between);
  max-width: $container-xl;
  height: 100%;

  // uncomment this line to make dropdowns only go as large as the grid container width
  // position: relative;

  // > .row {
  //   @media (min-width: $header-bp-min) {
  //     @include display-flex;
  //     @include align-items(center);
  //   }
  // }

  .header-dropdown > & {
    .row {
      width: 100%;
      @include flex-grow(1);
      // @media (min-width: $header-bp-min) {
      //   @include align-items(flex-start);
      // }
    }
  }
}

.header-logo {
  max-width: $header-logo-width;
}
.header-logo__image {
  @include translateZ(0); // Prevent bluriness from scaling
}

// .header-container > .header-nav
.header-nav {
  @include display-flex;
  @include align-items(center);
  @include justify-content(flex-start);
  @include flex-basis(0);
  @include flex-grow(2);

  // Space out each nav
  padding-left: $grid-gutter-width/2;
  padding-right: $grid-gutter-width/2;

  &.header-nav--left {
    padding-left: 0;
  }

  &.header-nav--right {
    padding-right: 0;
  }  

  &.header-nav--left,
  &.header-nav--right {
    @include flex-grow(3);
  }

  &.header-nav--left {

  }

  &.header-nav--right {
    @include justify-content(flex-end);
  }

  // For the logo block, it can either be &.header-nav--center, or .header-nav--left
  // Default to showing it in the center on large screens, but allow it flush left if necessary
  &.header-nav--logo {
    
    &:not(.header-nav--left) {
      
      @media (max-width: $header-bp-min - 1px) {
        padding-left: 0;
      }

      @media (min-width: $header-bp-min) {
        @include justify-content(center);  
      }      
    }
  }

  // Some menus don't need to be shown all the time
  &.header-nav--hide-on-mobile {
    @media (max-width: $header-bp-min - 1px) {
      display: none;
    }
  }

  &.header-nav--hide-on-desktop {
    @media (min-width: $header-bp-min) {
      display: none;
    }
  }  
}

// List of menu items
.header-nav__menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.header-nav__menu-item {
  display: inline-block;
  margin: 0 6px;

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }

  > a {
    padding: 27px 4px; // use vertical padding to match the height of the header
  }
}

// Cart Icon + Quantity
.header-cart__badge {
  display: inline-block;
  position: relative;
  
  &.has-items {

  }
}

.header-cart__badge-count {
  position: absolute;
  left: 50%;
  @include translateX(-50%);
  opacity: 0;

  .has-items & {
    opacity: 1;
  }
}

// Dropdown
.header-dropdown {
  position: absolute;
  z-index: -1;
  top: 100%;
  left: 0;
  right: 0;
  padding: 20px 0;
  background: $header-dropdown-bg;
  pointer-events: none;
  opacity: 0;
  box-shadow: $header-dropdown-box-shadow;
  @include transition(opacity $transition-duration-dropdown $transition-timing-function-dropdown-out);

  // If the header has a transparent background, you'll need this :before element to make sure that things look good when the dropdown opens
  // &:before {
  //   content: "";
  //   position: absolute;
  //   left: 0;
  //   right: 0;
  //   top: 0;
  //   height: $header-height-small;
  //   background: $color-white;
  //   @include translateY(-100%);

  //   @media (min-width: $header-bp-min) {
  //     height: $header-height-base;
  //   }
  // }

  &.is-open,
  &.is-forced-open {
    opacity: 1;
    pointer-events: auto;
    @include transition(opacity $transition-duration-dropdown $transition-timing-function-dropdown-in);
  }

  > .container-fluid {
    @include flex-grow(1);
    max-width: $container-xl;
  }
}

.header-dropdown__menu {
  display: inline-block;
  vertical-align: top;

  & + & {
    margin-left: $header-dropdown-menu-spacing;
  }

  ul {
    @extend .list-unstyled;

    // Style child menus
    ul {
      margin-top: 10px;
      padding-left: 15px;
    }

    > li:not(:last-child) {
      margin-bottom: 15px;
    }
  }
}

.header-dropdown__ctas {
  @include display-flex;
  @include flex-direction(row);
  @include flex-wrap(wrap);
  @include justify-content(flex-start);
  margin-left: -#{($grid-gutter-width / 2)};
  margin-right: -#{($grid-gutter-width / 2)};
}

.header-dropdown__cta {
  // This allows the CTA blocks to adjust their sizing based on sibling count.
  // But set a max-width to prevent them from growing too large
  @include flex-grow(1);
  @include flex-basis(25%);
  max-width: percentage(1/3);
  padding-left: $grid-gutter-width / 2;
  padding-right: $grid-gutter-width / 2;
}

.header-dropdown__cta-square {
  position: relative;
  width: 100%;
  padding-bottom: 100%; // Change this value if you want to change the shape of the CTA image
  margin-bottom: $grid-gutter-width/2;
  background: {
    position: center;
    size: cover;
  }
}

.header-dropdown__cta-square-text {
  position: absolute;
  top: 50%;
  left: 50%;
  @include translate(-50%, -50%);
}
